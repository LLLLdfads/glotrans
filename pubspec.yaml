name: glo_trans
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.3.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  file_picker: ^6.1.1
  dio: ^5.7.0
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  # 固定窗口最上层
  window_manager: ^0.3.8
  # icon
  font_awesome_flutter: ^10.8.0
  # 表格
  pluto_grid: ^8.0.0
  # 吐司
  fluttertoast: ^8.2.8
  # 弹窗
  flutter_easyloading: ^3.0.5
  # 状态管理
  provider: ^6.0.3
  # 指定list移动到指定位置
  scrollable_positioned_list: ^0.3.8
  # 本地数据库
  hive: ^2.2.3
  # excel
  excel: ^2.0.1

  flutter_localizations:
    sdk: flutter
#  初始化简便：hive_flutter 提供了一个便捷的方法来初始化 Hive，尤其是在处理 Flutter 应用中的异步初始化时特别有用。通过 Hive.initFlutter() 方法，可以自动选择合适的存储位置，无需手动调用平台特定的路径获取方法（如 path_provider）。
#  Widget 绑定：该插件确保了在 Flutter 应用生命周期内正确地初始化和关闭 Hive。这意味着您不需要手动管理 Hive 的初始化和关闭过程，减少了样板代码并降低了出错的可能性。
#  支持Flutter的StateManagement解决方案：虽然这不是 hive_flutter 的直接功能，但通过更好地与 Flutter 的集成，它使得将 Hive 与各种状态管理技术（如 Provider、Riverpod 或者 Bloc）结合使用更加容易，从而更高效地管理应用状态。
#  优化性能：hive_flutter 帮助优化数据加载过程，尤其是在需要频繁读取或写入数据的应用场景下，能提供更流畅的用户体验
  hive_flutter: ^1.1.0

  json_serializable: ^6.0.0
  oktoast: ^3.4.0
  rive: ^0.13.20
  flex_color_scheme: ^8.0.2

   # 本地数据库
  drift: ^2.14.0
  sqlite3_flutter_libs: ^0.5.0
  path_provider: ^2.0.0
  path: ^1.8.0
  
#  macos_ui: ^2.1.9
#  path_provider: ^2.1.3
dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: 2.4.9
  # 和build_runner配合使用
  hive_generator: ^2.0.1
  # 本地数据库
  drift_dev: ^2.14.0


  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - lib/assets/rive/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_intl:
  enabled: true
